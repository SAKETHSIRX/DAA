Experiment 8......


#include <stdio.h>

void kpsk(int, int, int[], int[], int[][100]);
void opt(int, int, int[], int[][100]);
int max(int, int);

int main() {
    int w[20], p[20], n, m, i, v[10][100];

    printf("Enter the number of elements:\n");
    scanf("%d", &n);

    printf("Enter the capacity of the knapsack:\n");
    scanf("%d", &m);

    printf("Enter the weights of the elements:\n");
    for (i = 1; i <= n; i++)
        scanf("%d", &w[i]);

    printf("Enter the profits of the elements:\n");
    for (i = 1; i <= n; i++)
        scanf("%d", &p[i]);

    kpsk(n, m, w, p, v);
    opt(n, m, w, v);

    return 0;
}

void kpsk(int n, int m, int w[], int p[], int v[][100]) {
    int i, j;

    for (i = 0; i <= n; i++) {
        for (j = 0; j <= m; j++) {
            if (i == 0 || j == 0)
                v[i][j] = 0;
            else if (j < w[i])
                v[i][j] = v[i - 1][j];
            else
                v[i][j] = max(v[i - 1][j], p[i] + v[i - 1][j - w[i]]);
        }
    }

    printf("\nDP Table (v[i][j]):\n");
    for (i = 0; i <= n; i++) {
        for (j = 0; j <= m; j++)
            printf("%d\t", v[i][j]);
        printf("\n");
    }
}

void opt(int n, int m, int w[], int v[][100]) {
    int i, j, x[20];

    printf("\nThe optimal profit is: %d\n", v[n][m]);

    for (i = 0; i < n; i++)
        x[i] = 0;

    i = n;
    j = m;

    while (i != 0 && j != 0) {
        if (v[i][j] != v[i - 1][j]) {
            x[i] = 1;
            j = j - w[i];
        }
        i--;
    }

    printf("The objects selected are (by index):\n");
    for (i = 1; i <= n; i++) {
        if (x[i] == 1)
            printf("%d ", i);
    }
    printf("\n");
}

int max(int a, int b) {
    return (a > b ? a : b);
}


Sample:

Enter the number of elements:
4
Enter the capacity of the knapsack:
5
Enter the weights of the elements:
2 1 3 2
Enter the profits of the elements:
12 10 20 15


Output:


DP Table (v[i][j]):
0	0	0	0	0	0	
0	0	12	12	12	12	
0	10	12	22	22	22	
0	10	12	22	22	32	
0	10	15	25	27	37	

The optimal profit is: 37
The objects selected are (by index):
2 3 4
