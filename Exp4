Experiment 4....


#include <stdio.h>

int visit[20], n, adj[20][20], count = 0;

// DFS function
void dfs(int v) {
    int w;
    visit[v] = 1;
    count++;
    for (w = 1; w <= n; w++) {
        if (adj[v][w] == 1 && visit[w] == 0) {
            dfs(w);
        }
    }
}

int main() {
    int v, w;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the adjacency matrix:\n");
    for (v = 1; v <= n; v++) {
        for (w = 1; w <= n; w++) {
            scanf("%d", &adj[v][w]);
        }
    }

    // Initialize visit array
    for (v = 1; v <= n; v++)
        visit[v] = 0;

    // Start DFS from vertex 1
    dfs(1);

    // Check connectivity
    if (count == n)
        printf("\nThe graph is connected\n");
    else
        printf("\nThe graph is not connected\n");

    return 0;
}

Sample input:

Enter the number of vertices: 4
Enter the adjacency matrix:
0 1 0 0
1 0 1 0
0 1 0 1
0 0 1 0

Output:

The graph is connected
